/*
Colors vars have to look like this one, always need at least a 'base'


-- Exemple --

h1 {
  border: color();
  color: color('primary', 'light');
  background: color('secondary', 'light', 0.5);
}
*/

$colors: (
  'primary': (
    light: #ffa,
    base: #feca05,
    dark: #ffc,
  ),
  'secondary': (
    light: #ffd,
    base: #e53e51,
    dark: #fff,
  ),
  'default': (
    success: #28a745,
    danger: #dc3545,
    warning: #ffc107,
    dark: #2d2d2d,
    light: #fff,
    muted: #6c757d,
  ),
);

@function color($color-name: primary, $tone: base, $alpha: false) {
  @if ($alpha) {
    @return rgba(map-get(map-get($colors, $color-name), $tone), $alpha);
  }

  @return map-get(map-get($colors, $color-name), $tone);
}

// Init class
@each $color, $tones in $colors {
  @each $tone, $value in $tones {
    @if ($tone == 'base') {
      // bg-primary for base color
      .bg-#{$color} {
        background-color: $value !important; // Override bootstrap value
      }
      .color-#{$color} {
        color: $value !important;
      }
      .border-#{$color} {
        border-color: $value !important;
      }
    } @else {
      // bg-primary-light for shade
      .bg-#{$color}-#{$tone} {
        background-color: $value;
      }
      .color-#{$color}-#{$tone} {
        color: $value;
      }
      .border-#{$color}-#{$tone} {
        border-color: $value;
      }
    }
  }
}
