// Init class

@each $color, $tones in $us-colors {
  @each $tone, $value in $tones {
    @if ($tone == 'base') {
      // bg-primary for base color
      .bg-#{$color},
      .hover-bg-#{$color}:hover {
        background-color: $value !important; // Override bootstrap value
        &.contrast-content {
          * {
            color: map-get(map-get($us-colors, $color), contrast);
          }
        }
      }

      .color-#{$color},
      .hover-color-#{$color}:hover {
        color: $value !important;
      }
      .border-#{$color},
      .hover-border-#{$color}:hover {
        border-color: $value !important;
      }
      .fill-#{$color},
      .hover-fill-#{$color}:hover {
        fill: $value !important;
      }
      .stroke-#{$color},
      .hover-stroke-#{$color}:hover {
        color: $value !important;
      }
      .afterNBefore-#{$color},
      .hover-afterNBefore-#{$color}:hover {
        &::before,
        &::after {
          background-color: $value !important;
        }
      }
    } @else {
      // bg-primary-light for shade
      .bg-#{$color}-#{$tone},
      .hover-bg-#{$color}-#{$tone}:hover {
        background-color: $value;
        &.contrast-content {
          * {
            color: map-get(map-get($us-colors, $color), contrast);
          }
        }
      }
      .color-#{$color}-#{$tone},
      .hover-color-#{$color}-#{$tone}:hover {
        color: $value;
      }
      .border-#{$color}-#{$tone},
      .hover-border-#{$color}-#{$tone}:hover {
        border-color: $value;
      }
      .fill-#{$color}-#{$tone},
      .hover-fill-#{$color}-#{$tone}:hover {
        fill: $value;
      }
      .stroke-#{$color}-#{$tone},
      .hover-stroke-#{$color}-#{$tone}:hover {
        fill: $value;
      }
      .afterNBefore-#{$color}-#{$tone},
      .hover-afterNBefore-#{$color}-#{$tone}:hover {
        &::before,
        &::after {
          background-color: $value;
        }
      }
    }
  }
}
